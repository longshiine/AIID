[{"/Users/macbook/프로젝트/AIID/front/src/index.js":"1","/Users/macbook/프로젝트/AIID/front/src/App.js":"2","/Users/macbook/프로젝트/AIID/front/src/KakaoMap.js":"3","/Users/macbook/프로젝트/AIID/front/src/data.js":"4","/Users/macbook/프로젝트/AIID/front/src/map.js":"5"},{"size":198,"mtime":1610262075891,"results":"6","hashOfConfig":"7"},{"size":886,"mtime":1610683316153,"results":"8","hashOfConfig":"7"},{"size":8212,"mtime":1610516657853,"results":"9","hashOfConfig":"7"},{"size":26868,"mtime":1610516296584,"results":"10","hashOfConfig":"7"},{"size":894,"mtime":1610513249407,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wq7jzt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macbook/프로젝트/AIID/front/src/index.js",[],["24","25"],"/Users/macbook/프로젝트/AIID/front/src/App.js",["26","27"],"/Users/macbook/프로젝트/AIID/front/src/KakaoMap.js",["28","29"],"/*global kakao*/\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport seoulGeo from \"./seoul\"\n \nconst KakaoMap = (props) => {\n  useEffect(() => {\n    // 0. Map initialize\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=5c8b46c9fb95f0c357280a31672c2ffe&autoload=false&libraries=services,clusterer\";\n    document.head.appendChild(script);\n    script.onload = () => {\n      kakao.maps.load(() => {\n        // 1. 지도 객체 생성 및 document에 bind\n        let container = document.getElementById(\"Mymap\");\n        let options = {\n          center: new kakao.maps.LatLng(props.latlng.lat, props.latlng.lng),\n          level: 3\n        };\n        const map = new window.kakao.maps.Map(container, options);\n        var infowindow = new kakao.maps.InfoWindow({zIndex:1});\n        var customOverlay = new kakao.maps.CustomOverlay({});\n        \n        // 2. 레이어 관련 로직\n        boundsWithMarkers(props.data, kakao.maps.services.Status.OK)\n        seoulGeo.features.forEach((val, index) => {\n          const coordinates = val.geometry.coordinates;\n          const name = val.properties.name;\n          displayArea(coordinates, name, index);\n        });\n\n        // 3. Functions\n        function boundsWithMarkers (data, status) { // 마커들을 표시하고, 마커들 기준으로 지도를 다시 세팅\n            if (status === kakao.maps.services.Status.OK) {\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n                // LatLngBounds 객체에 좌표를 추가합니다\n                var bounds = new kakao.maps.LatLngBounds();\n                data.forEach(element => {\n                  bounds.extend(new kakao.maps.LatLng(element.y, element.x));\n                  displayMarker(element);\n                });\n                map.setBounds(bounds);\n            } \n        }\n        function displayMarker(place) { // 지도에 마커를 표시하는 함수입니다\n            // 마커를 생성하고 지도에 표시합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: new kakao.maps.LatLng(place.y, place.x) \n            });\n            // 마커에 클릭이벤트를 등록합니다\n            kakao.maps.event.addListener(marker, 'click', function() {\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n                infowindow.open(map, marker);\n            });\n            return marker\n        }\n        function AIIDInfo(name){\n          const color = {'노원구': '#E03F3C', '동작구': '#fff', '성북구': '#F7A49B', '용산구': '#E3C4BD', '영등포구': '#E3C4BD', '중랑구': '#F7A49B', '강서구': '#E03F3C', '송파구': '#E03F3C', '서초구': '#E3C4BD', '관악구': '#F7A49B', '광진구': '#E3C4BD', '구로구': '#F7A49B', '은평구': '#E03F3C', '마포구': '#E3C4BD', '양천구': '#F7A49B', '도봉구': '#F7A49B', '강동구': '#E03F3C', '강남구': '#E3C4BD', '강북구': '#E3C4BD', '동대문구': '#753B39', '금천구': '#E3C4BD', '종로구': '#fff', '성동구': '#E3C4BD', '서대문구': '#F7A49B', '중구': '#fff'}\n          const count = {'노원구': 1395, '동작구': 591, '성북구': 1110, '용산구': 759, '영등포구': 721, '중랑구': 1021, '강서구': 1332, '송파구': 1338, '서초구': 608, '관악구': 1106, '광진구': 644, '구로구': 989, '은평구': 1463, '마포구': 884, '양천구': 1084, '도봉구': 1174, '강동구': 1320, '강남구': 776, '강북구': 861, '동대문구': 1816, '금천구': 782, '종로구': 312, '성동구': 675, '서대문구': 1040, '중구': 346}\n          return {\n            color: color[name],\n            count: count[name]\n          };\n        }\n        function displayArea(coordinates, name, index) {\n          let path = [];            //폴리곤 그려줄 path\n          let points = [];        //중심좌표 구하기 위한 지역구 좌표들\n          const {color, count} = AIIDInfo(name)\n          coordinates[0].forEach((coordinate, idx) => {\n              let point = new Object();\n              if (idx % 2) {\n                point.x = coordinate[1];\n                point.y = coordinate[0];\n                points.push(point);\n                path.push(new kakao.maps.LatLng(coordinate[1], coordinate[0]));  \n              }\n          })\n          // 다각형을 생성합니다 \n          const polygon = new kakao.maps.Polygon({\n              map : map, // 다각형을 표시할 지도 객체\n              path : path,\n              strokeWeight : 1,\n              strokeColor : '#fff',\n              strokeOpacity : 0.7,\n              fillColor : color,\n              fillOpacity : 0.5\n          });\n          kakao.maps.event.addListener(polygon, 'mouseover', function(mouseEvent) {\n            polygon.setOptions({fillColor: '#09f'});\n            customOverlay.setContent('<div style=\"position: absolute; background: #fff; border: 1px solid #888; border-radius:3px; font-size: 12px; top: -5px;left: 15px;padding:2px;\">' + name + ', 실종건수: '+ count + '</div>');\n            customOverlay.setPosition(mouseEvent.latLng); \n            customOverlay.setMap(map);\n          });\n          // 다각형에 mousemove 이벤트를 등록하고 이벤트가 발생하면 커스텀 오버레이의 위치를 변경합니다 \n          kakao.maps.event.addListener(polygon, 'mousemove', function(mouseEvent) {\n              customOverlay.setPosition(mouseEvent.latLng); \n          });\n          // 커스텀 오버레이를 지도에서 제거합니다 \n          kakao.maps.event.addListener(polygon, 'mouseout', function() {\n              polygon.setOptions({fillColor: color});\n              customOverlay.setMap(null);\n          });\n          kakao.maps.event.addListener(polygon, 'click', function(mouseEvent) {\n            var level = map.getLevel()-2;\n            map.setLevel(level, {anchor: centroid(points), animate: {\n              duration: 350\n            }})\n          });\n        }\n        function centroid(points) {\n          var i, j, len, p1, p2, f, area, x, y;\n          area = x = y = 0;\n          for (i =0, len = points.length, j = len -1; i< len; j = i++){\n            p1 = points[i];\n            p2 = points[j]\n            f = p1.y * p2.x - p2.y * p1.x;\n            x += (p1.x +p2.x) * f;\n            y += (p1.y +p2.y) * f;\n            area += f * 3;\n          }\n          return new kakao.maps.LatLng(x /area, y / area);\n        } \n      });\n    };\n  }, [props.marker]);\n  return (\n    <Container >\n      <Title>\n        실시간 이상행동 위치\n      </Title>\n      <MapContents id=\"Mymap\" />\n      <InfoTitle>실종가능성</InfoTitle>\n      <Info>\n        <VeryLow>300이상: 매우낮음,</VeryLow> \n        <Low>600이상: 낮음,</Low> \n        <Middle>900이상: 중간,</Middle>\n        <High>1200이상: 위험,</High> \n        <VeryHigh>1500이상: 매우위험</VeryHigh>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 10px;\n  align-items: center;\n  justify-content: center;\n`\nconst Title = styled.div`\n  border: 2px solid;\n  padding: 10px;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: heavy;\n  align-items: center;\n`\nconst MapContents = styled.div`\n  width: 95%;\n  height: 400px;\n  align-items: center;\n`\nconst InfoTitle = styled.div`\n  border: 1px solid;\n  padding: 5px;\n  margin-top: 10px;\n  background-color: black;\n  color: #fff;\n`\nconst Info = styled.div`\n  background-color: black;\n  border: 1px solid;\n  padding: 5px;\n  margin-top: 5px;\n`\nconst VeryLow = styled.span`\n  color: #fff;\n  margin-right: 15px;\n`\nconst Low = styled.span`\n  color: #E3C4BD;\n  margin-right: 15px;\n`\nconst Middle = styled.span`\n  color: #F7A49B;\n  margin-right: 15px;\n`\nconst High = styled.span`\n  color: #E03F3C;\n  margin-right: 15px;\n`\nconst VeryHigh = styled.span`\n  color: #753B39;\n  margin-right: 15px;\n`\nexport default KakaoMap;","/Users/macbook/프로젝트/AIID/front/src/data.js",[],"/Users/macbook/프로젝트/AIID/front/src/map.js",["30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":17,"nodeType":"37","messageId":"38","endLine":3,"endColumn":25},{"ruleId":"35","severity":1,"message":"39","line":3,"column":27,"nodeType":"37","messageId":"38","endLine":3,"endColumn":36},{"ruleId":"40","severity":1,"message":"41","line":73,"column":27,"nodeType":"42","messageId":"43","endLine":73,"endColumn":39},{"ruleId":"44","severity":1,"message":"45","line":128,"column":6,"nodeType":"46","endLine":128,"endColumn":20,"suggestions":"47"},{"ruleId":"35","severity":1,"message":"48","line":21,"column":15,"nodeType":"37","messageId":"38","endLine":21,"endColumn":18},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.data', 'props.latlng.lat', and 'props.latlng.lng'. Either include them or remove the dependency array.","ArrayExpression",["51"],"'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [props.data, props.latlng.lat, props.latlng.lng, props.marker]",{"range":"54","text":"55"},[5950,5964],"[props.data, props.latlng.lat, props.latlng.lng, props.marker]"]